# This is a basic workflow to help you get started with Actions

name: Automatic testing

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  run-tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Get Composer Cache Directory
        id: get-composer-cache-dir # Instead of composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
    
      - name: Cache Composer
        uses: actions/cache@v3
        id: composer-cache
        with:
          path: ${{ steps.get-composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
              ${{ runner.os }}-composer-
      
      - name: Install composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Start wp-env
        uses: godaddy-wordpress/setup-wp-env@v1
        with:
          core: 'WordPress/WordPress#6.6'
          phpVersion: '7.4'

      - name: Run Tests
        run: wp-env run tests-cli phpunit -c phpunit.xml --verbose --env-cwd=wp-content/plugins/formello
